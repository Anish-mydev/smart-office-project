
{
  "openapi": "3.0.0",
  "info": {
    "title": "Smart Office Backend API",
    "version": "1.1.0",
    "description": "API documentation for the Smart Office backend microservices, including admin resource management."
  },
  "servers": [
    {
      "url": "http://SmartO-Smart-K4IDcAF4swkL-135473292.us-east-1.elb.amazonaws.com",
      "description": "Development server"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistration"
              }
            }
          }
        },
        "responses": {
          "201": { "$ref": "#/components/responses/AuthResponse" },
          "400": { "$ref": "#/components/responses/BadRequest" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user and get a JWT token",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": { "$ref": "#/components/responses/AuthResponse" },
          "401": { "$ref": "#/components/responses/Unauthorized" }
        }
      }
    },
    "/rooms": {
      "get": {
        "summary": "Get all rooms",
        "tags": ["Room Management"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "A list of rooms.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Room" }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "403": { "$ref": "#/components/responses/Forbidden" }
        }
      },
      "post": {
        "summary": "Create a new room",
        "tags": ["Room Management"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RoomRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Room created successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Room" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "403": { "$ref": "#/components/responses/Forbidden" }
        }
      }
    },
    "/rooms/{roomId}": {
      "put": {
        "summary": "Update a room",
        "tags": ["Room Management"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "$ref": "#/components/parameters/RoomId" }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RoomRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room updated successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Room" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "403": { "$ref": "#/components/responses/Forbidden" },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      },
      "delete": {
        "summary": "Delete a room",
        "tags": ["Room Management"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "$ref": "#/components/parameters/RoomId" }],
        "responses": {
          "204": { "description": "Room deleted successfully." },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "403": { "$ref": "#/components/responses/Forbidden" },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      }
    },
    "/rooms/bookings": {
      "post": {
        "summary": "Create a new room booking",
        "tags": ["Room Booking"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RoomBookingRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Booking created successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BookingConfirmation" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "409": { "$ref": "#/components/responses/Conflict" }
        }
      }
    },
    "/desks": {
      "get": {
        "summary": "Get all desks",
        "tags": ["Desk Management"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "A list of desks.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Desk" }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "403": { "$ref": "#/components/responses/Forbidden" }
        }
      },
      "post": {
        "summary": "Create a new desk",
        "tags": ["Desk Management"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeskRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Desk created successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Desk" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "403": { "$ref": "#/components/responses/Forbidden" }
        }
      }
    },
    "/desks/{deskId}": {
      "put": {
        "summary": "Update a desk",
        "tags": ["Desk Management"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "$ref": "#/components/parameters/DeskId" }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeskRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Desk updated successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Desk" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "403": { "$ref": "#/components/responses/Forbidden" },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      },
      "delete": {
        "summary": "Delete a desk",
        "tags": ["Desk Management"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "$ref": "#/components/parameters/DeskId" }],
        "responses": {
          "204": { "description": "Desk deleted successfully." },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "403": { "$ref": "#/components/responses/Forbidden" },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      }
    },
    "/desks/bookings": {
      "post": {
        "summary": "Create a new desk booking",
        "tags": ["Desk Booking"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeskBookingRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Booking created successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BookingConfirmation" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "409": { "$ref": "#/components/responses/Conflict" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserRegistration": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "format": "password" },
          "role": { "type": "string", "enum": ["Employee", "Admin"] }
        }
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "format": "password" }
        }
      },
      "Room": {
        "type": "object",
        "properties": {
          "roomId": { "type": "string", "format": "uuid" },
          "name": { "type": "string" },
          "location": { "type": "string" },
          "capacity": { "type": "integer" }
        }
      },
      "RoomRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "Conference Room A" },
          "location": { "type": "string", "example": "1st Floor" },
          "capacity": { "type": "integer", "example": 10 }
        }
      },
      "Desk": {
        "type": "object",
        "properties": {
          "deskId": { "type": "string", "format": "uuid" },
          "location": { "type": "string" },
          "features": { "type": "array", "items": { "type": "string" } }
        }
      },
      "DeskRequest": {
        "type": "object",
        "properties": {
          "location": { "type": "string", "example": "2nd Floor, Zone B" },
          "features": { "type": "array", "items": { "type": "string" }, "example": ["Dual Monitor", "Standing Desk"] }
        }
      },
      "RoomBookingRequest": {
        "type": "object",
        "properties": {
          "roomId": { "type": "string", "format": "uuid" },
          "startTime": { "type": "string", "format": "date-time" },
          "endTime": { "type": "string", "format": "date-time" }
        }
      },
      "DeskBookingRequest": {
        "type": "object",
        "properties": {
          "deskId": { "type": "string", "format": "uuid" },
          "date": { "type": "string", "format": "date" }
        }
      },
      "BookingConfirmation": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "bookingId": { "type": "string", "format": "uuid" }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": { "type": "string" }
        }
      }
    },
    "responses": {
      "AuthResponse": {
        "description": "Authentication successful.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": { "token": { "type": "string" } }
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad Request - The server cannot process the request due to a client error.",
        "content": {
          "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized - The client must authenticate itself to get the requested response.",
        "content": {
          "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
        }
      },
      "Forbidden": {
        "description": "Forbidden - The client does not have access rights to the content.",
        "content": {
          "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
        }
      },
      "NotFound": {
        "description": "Not Found - The server can not find the requested resource.",
        "content": {
          "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
        }
      },
      "Conflict": {
        "description": "Conflict - The request could not be completed due to a conflict with the current state of the resource.",
        "content": {
          "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
        }
      }
    },
    "parameters": {
      "RoomId": {
        "name": "roomId",
        "in": "path",
        "required": true,
        "description": "ID of the room",
        "schema": { "type": "string", "format": "uuid" }
      },
      "DeskId": {
        "name": "deskId",
        "in": "path",
        "required": true,
        "description": "ID of the desk",
        "schema": { "type": "string", "format": "uuid" }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
